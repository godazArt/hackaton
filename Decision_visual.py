import numpy as np
import numpy.linalg as lg
import pylab
import matplotlib.patches
import matplotlib.path
import matplotlib.pyplot as plt

def square(polygon):
    m = 0
    l = len(polygon)
    for i in range(l):
        m += polygon[i % l][0]*polygon[(i+1)%l][1] - polygon[i % l][1]*polygon[(i+1)%l][0]
    return abs(m/2)
    
    
def center(polygon):
    pass

COEFFS = (1.2341533368996, 1.3506679930757048, 1.2485479733879499, 1.1442333335897006, 1.1562848640786463, 1.142536932395348, 1.1438096174879062, 1.1286520472997659, 1.1351525418430253, 1.1353991838924316, 1.136794507926771, 1.1303765782466104, 1.1392459430659736, 1.1295705411756358, 1.1408723190693406, 1.1390085890531747, 1.1599295869731028, 1.1422028498843955, 1.1462244813726568, 1.1394735717282691, 1.1646349300608425, 1.1377541984762254, 1.1619261719996463, 1.1693498967846492, 1.1607413876556893, 1.1578918864869352, 1.1505583861216626, 1.179012750093997, 1.1556649306698428, 1.1634062202400017, 1.1478369690355594, 1.165369797250847, 1.1812932836131769, 1.189967293312803, 1.1755912817264471, 1.2029017829758601, 1.1813935093478345, 1.1658645612177463, 1.2215943031117305, 1.174326235751736, 1.2193479945765753, 1.2272731016818066, 1.229890956068097, 1.186595725715304, 1.2282636174414006, 1.2214037025649798, 1.1979511610120053, 1.194086721879939, 1.2196051913807182, 1.2260462248156316, 1.2366309138354987, 1.2635484888522548, 1.2757326588383953, 1.14414763206159, 1.3140870456132294, 1.2054220406649285, 1.3157265075828541, 1.1706855315324238, 1.2791950370960594, 1.174386743068498, 1.172552155122358, 1.1838661687240735, 1.2091855555743758, 1.1565835378603524, 1.1564700935321548, 1.2405765900856143, 1.1389301244627397, 1.1360742049424333, 1.180460932171584, 1.0852337759921242, 1.232944633441126, 1.3484131502704246, 1.3149570059946287, 1.4062171450768144, 1.2341031533368996, 1.2581908272787619, 1.279242454966297, 1.3033828945693022, 1.2512026098998377, 1.203234235635255, 1.2341031533368994, 1.4790853716704717, 1.2341031533368996, 1.1055643466401777, 1.2044361251351974, 1.3030272664060707, 1.3555077550464354, 1.3463596379113456, 1.2896907470913916, 1.1769977113682097, 1.2341031533368994, 1.132120879800362, 1.0722123801226884, 1.1298950039371798, 1.2341031533368994, 1.473034248427529, 1.2253146174981107, 1.1140610140925102, 1.2341031533368994, 1.3534177490990449, 1.1924507298421223, 1.1044332463956952, 1.195548120524926, 1.0475133452192678, 1.0834829653987557, 1.084226531604031, 1.2174566161902047, 1.2341031533368994, 1.2341031533368994, 1.2341031533368994, 1.2265436080036758, 1.550350118000184, 1.2341031533368991, 1.3128345057391748, 1.5978820553888309, 1.2341031533368991, 1.2341031533368991, 1.234103153336899, 1.234103153336899, 1.234103153336899, 1.387560763454317, 1.234103153336899, 1.2341031533368987, 1.3165925603379107, 1.2341031533368987, 1.2341031533368987, 2.238074316888945, 1.2341031533368985, 1.327280013570718, 1.183775988895967, 1.2341031533368985, 1.2341031533368985, 1.2341031533368985, 1.0805344161992447, 1.2341031533368982, 1.2341031533368982, 1.2341031533368982, 1.2341031533368982, 1.234103153336898, 1.234103153336898, 1.3579788518915785, 1.3380887523471565, 1.2104528304402862, 1.1947050462207718, 1.234103153336898, 1.234103153336898, 1.1199248246816549, 1.2341031533368978, 1.081568450701884, 1.4778507154890206, 1.2341031533368978, 1.2341031533368978, 1.2341031533368978, 1.2341031533368976, 1.2341031533368976, 1.1136057832145154, 1.1779556882041797, 1.2341031533368976, 1.193959165665594, 1.2341031533368976, 1.2341031533368974, 1.133977407403235, 1.2341031533368974, 1.2341031533368974, 1.2341031533368974, 1.2341031533368974, 1.2341031533368971, 1.2341031533368971, 1.2341031533368971, 1.2341031533368971, 1.2341031533368971, 1.234103153336897, 1.234103153336897, 1.0895302387131318, 1.234103153336897, 1.234103153336897, 1.234103153336897, 1.2341031533368967, 1.1023879868512034, 1.2341031533368967, 1.2341031533368967, 1.2341031533368967, 1.9641846976438841, 1.2341031533368967, 1.2341031533368967, 1.2341031533368965, 1.2341031533368965, 1.4333303061155303, 1.2341031533368965, 1.2341031533368965, 1.2341031533368965, 1.2341031533368962, 1.2341031533368962, 1.2341031533368962, 1.2341031533368962, 1.2341031533368962, 1.2341031533368962, 1.2341031533368962, 1.234103153336896, 1.225576793193397, 1.234103153336896, 1.234103153336896, 1.0650258647966995, 1.400672817286516, 1.234103153336896, 1.234103153336896, 1.793122090138122, 1.234103153336896, 1.2341031533368958, 1.2341031533368958, 1.2341031533368958, 1.8417128308165482, 1.2341031533368958, 1.2341031533368958, 1.2341031533368958, 1.2341031533368958, 1.2341031533368956, 1.2341031533368956, 1.2341031533368956, 1.2341031533368956, 1.2341031533368956, 1.2341031533368956, 1.2341031533368956, 1.2341031533368956, 1.2341031533368954, 1.2341031533368954, 1.2341031533368954, 1.2341031533368954, 1.2341031533368954, 1.2341031533368954, 1.2341031533368954, 1.2341031533368954, 1.2341031533368951, 1.2341031533368951, 1.2341031533368951, 1.2341031533368951, 1.2341031533368951, 1.2341031533368951, 1.2608288660561016, 1.2341031533368951, 1.2341031533368951, 1.2341031533368951, 1.234103153336895, 1.234103153336895, 1.234103153336895, 1.234103153336895, 1.234103153336895, 1.234103153336895, 1.234103153336895, 1.234103153336895)
CNT = 6
polygon = np.array(list(map(float, input().split()))).reshape(-1, 2)

x = sum(polygon[:, 0])/len(polygon)
y = sum(polygon[:, 1])/len(polygon)
        
polygon[:, 0] -= x
polygon[:, 1] -= y

sqr = round(square(polygon)*2.5)
coef = np.sqrt(COEFFS[sqr])

fig, ax = plt.subplots()
ax.set_xlabel('x')
ax.set_ylabel('y')

#ax.plot(polygon*1.5, b*3, label='after')
ax.set_title("prediction")  # Add a title to the axes.

axes = pylab.gca()
axes.set_aspect("equal")
for i in range(CNT):
    polygon *= coef
    print("After", i+1, "day(s):")
    print(polygon)
    np.append(polygon, polygon[0])
    np.append(polygon, polygon[1])
    #a=polygon[0]
    #b=polygon[1]
    #polygon_1 = 
    axes.add_patch (matplotlib.patches.Polygon(polygon, fill = False, edgecolor=np.random(0,1)))
    #ax.plot(polygon[:, 0],polygon[:, 1], label='day '+str(i))
    #np.delete(polygon, a)
    #np.delete(polygon, b)
ax.legend()     
polygon[:, 0] += x
polygon[:, 1] += y

